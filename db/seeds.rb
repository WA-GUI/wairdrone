# # This file should contain all the record creation needed to seed the database with its default values.
# # The data can then be loaded with the bin/rails db:seed command (or created alongside the database with db:setup).
# #
# # Examples:
# #
# #   movies = Movie.create([{ name: "Star Wars" }, { name: "Lord of the Rings" }])
# #   Character.create(name: "Luke", movie: movies.first)
puts 'Destroy services'
Service.destroy_all
puts 'Destroy services done'

puts 'Create services'

thermographie_batiment = Service.create!(name: 'Thermographie bâtiments', description: "La thermographie met en évidence les irrégularités dans l'isolation thermique des parois ou des toitures, identifie les ponts thermiques, détecte les défauts d'étanchéité à l'air, relève les infiltrations d'eau ou la présence d'humidité et, plus généralement, pointe du doigt tout ce qui relève de l'inconfort thermique.", Captation: 2.20, Traitement: 1.80, Déplacement: 0.94, infos1: "L'inspection thermique ou thermographie d'un bâtiment permet de :", infos2: "Visualiser les déperditions énergétiques, détecter les défauts ou l'absence d'isolation, visualiser les fuites d'air, trouver l'humidité dans l'isolation, les toits, les murs, dans la structure intérieure ou extérieure, identifier les ponts thermiques, repérer l'infiltration d'eau dans les toits terrasse, détecter les ruptures de canalisation d'eau chaude, observer les erreurs de construction, trouver les défauts dans les canalisations d'alimentation et le réseau de chauffage urbain.", infos3: "La thermographie s'intéresse au rayonnement émis par l'objet observé, puisque c'est de ce rayonnement que l'on déduit la température de l'objet. Elle enregistre l'intensité du rayonnement dans la partie infrarouge du spectre électromagnétique, et la convertit en image visible. Plus un objet est chaud, plus il émet du rayonnement infrarouge.", infos4: "La caméra thermique est le seul outil capable de produire une image des pertes énergétiques d'un bâtiment. Les images thermiques produites sont précises et convaincantes.", infos5: "WAIRDRONE vous propose une intervention comprenant une thermographie à 360° de votre bâtiment, ainsi que l'édition d'un rapport d'expertise thermique livré par voie dématérialisée au format PDF.", infos6: "Le rapport comprend une introduction, les informations de captation, une partie détaillant la toiture, une partie détaillant les différentes façades et menuiseries, une conclusion et nos recommandations.", infos7: "Chaque projet fera l'objet d'un devis personnalisé.", infos8: "Nous nous occupons de toutes les autorisations nécessaires, de la prise de contact avec les gestionnaires des espaces aériens aux validations avec les autorités compétentes.", infos9: "Nos solides partenariats avec plusieurs professionnels locaux compétents de la rénovation énergétique nous permettent de chiffrer au plus juste les rénovations envisagées et ainsi prioriser ces travaux.", infos10: "Une fois les rénovations effectuées, nous vous proposons une intervention complémentaire afin d'imager, contrôler et constater l'efficacité des travaux engagés.", logo: "https://res.cloudinary.com/wagui/image/upload/v1659606849/wairdrone/Logos/logo_th_b_s7woro.svg")
file1 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659360761/wairdrone/Thermographie/Thermo_3_pxo8li.jpg')
thermographie_batiment.photos.attach(io: file1, filename: 'thermographie_bâtiment.jpg', content_type: 'image/jpg')
file2 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562258/wairdrone/Thermographie/DJI_0189_R_mmv9qt.jpg')
thermographie_batiment.photos.attach(io: file2, filename: 'thermographie_bâtiment_2.jpg', content_type: 'image/jpg')
file3 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562272/wairdrone/Thermographie/DJI_0195_R_kba4jy.jpg')
thermographie_batiment.photos.attach(io: file3, filename: 'thermographie_bâtiment_3.jpg', content_type: 'image/jpg')
file4 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562255/wairdrone/Thermographie/DJI_0159_R_-_copie_a3lxve.jpg')
thermographie_batiment.photos.attach(io: file4, filename: 'thermographie_bâtiment_4.jpg', content_type: 'image/jpg')
file5 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562190/wairdrone/Thermographie/DJI_0001_R_1_xrsxbg.jpg')
thermographie_batiment.photos.attach(io: file5, filename: 'thermographie_bâtiment_5.jpg', content_type: 'image/jpg')
file6 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562195/wairdrone/Thermographie/DJI_0031_R_1_za2h5r.jpg')
thermographie_batiment.photos.attach(io: file6, filename: 'thermographie_bâtiment_6.jpg', content_type: 'image/jpg')
file7 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562194/wairdrone/Thermographie/DJI_0029_R_pxbpad.jpg')
thermographie_batiment.photos.attach(io: file7, filename: 'thermographie_bâtiment_7.jpg', content_type: 'image/jpg')
file8 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562294/wairdrone/Thermographie/DJI_0331_R_qswwne.jpg')
thermographie_batiment.photos.attach(io: file8, filename: 'thermographie_bâtiment_8.jpg', content_type: 'image/jpg')
file9 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562295/wairdrone/Thermographie/DJI_0293_R_sgudkw.jpg')
thermographie_batiment.photos.attach(io: file9, filename: 'thermographie_bâtiment_9.jpg', content_type: 'image/jpg')
file10 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562312/wairdrone/Thermographie/DJI_0349_R_-_copie_wmt890.jpg')
thermographie_batiment.photos.attach(io: file10, filename: 'thermographie_bâtiment_10.jpg', content_type: 'image/jpg')
file11 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562311/wairdrone/Thermographie/DJI_0561_R_pcrlxp.jpg')
thermographie_batiment.photos.attach(io: file11, filename: 'thermographie_bâtiment_11.jpg', content_type: 'image/jpg')
file12 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562308/wairdrone/Thermographie/DJI_0345_R_-_copie_cz6vf7.jpg')
thermographie_batiment.photos.attach(io: file12, filename: 'thermographie_bâtiment_12.jpg', content_type: 'image/jpg')
file13 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562307/wairdrone/Thermographie/Thermographie_toiture_nqnzlz.jpg')
thermographie_batiment.photos.attach(io: file13, filename: 'thermographie_bâtiment_13.jpg', content_type: 'image/jpg')
file14 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562305/wairdrone/Thermographie/Thermographie_toiture_3_jbocx4.jpg')
thermographie_batiment.photos.attach(io: file14, filename: 'thermographie_bâtiment_14.jpg', content_type: 'image/jpg')
file15 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562301/wairdrone/Thermographie/DJI_0479_R_u1ngmw.jpg')
thermographie_batiment.photos.attach(io: file15, filename: 'thermographie_bâtiment_15.jpg', content_type: 'image/jpg')
file16 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562274/wairdrone/Thermographie/DJI_0215_R_xckmgd.jpg')
thermographie_batiment.photos.attach(io: file16, filename: 'thermographie_bâtiment_16.jpg', content_type: 'image/jpg')
file17 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562274/wairdrone/Thermographie/DJI_0283_R_-_copie_o0oemw.jpg')
thermographie_batiment.photos.attach(io: file17, filename: 'thermographie_bâtiment_17.jpg', content_type: 'image/jpg')
file18 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562272/wairdrone/Thermographie/DJI_0203_R_v5oog3.jpg')
thermographie_batiment.photos.attach(io: file18, filename: 'thermographie_bâtiment_18.jpg', content_type: 'image/jpg')
file19 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562236/wairdrone/Thermographie/DJI_0147_R_uvevbf.jpg')
thermographie_batiment.photos.attach(io: file19, filename: 'thermographie_bâtiment_19.jpg', content_type: 'image/jpg')
file20 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659562220/wairdrone/Thermographie/DJI_0045_R_ksdx7b.jpg')
thermographie_batiment.photos.attach(io: file20, filename: 'thermographie_bâtiment_20.jpg', content_type: 'image/jpg')
file100 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659606849/wairdrone/Logos/logo_th_b_s7woro.svg')
thermographie_batiment.photos.attach(io: file100, filename: 'logo_thermographie_bâtiment.svg', content_type: 'image/svg')

puts "#{Service.count} services created"

thermographie_pv = Service.create(name: 'Thermographie photovoltaïque', description: 'Le drone est le moyen le plus rapide et le plus économique pour contrôler et diagnostiquer les panneaux photovoltaïques par thermographie, en réalisant des images thermiques.', Captation: 2.20, Traitement: 1.80, Déplacement: 0.94, infos1:"
Le moindre dysfonctionnement invisible à l’œil nu, d’une cellule photovoltaïque, d’un raccordement ou autres est immédiatement repéré par les images infrarouges, faisant apparaitre les écarts de température par une différence des couleurs.", infos2: "Nos interventions peuvent être effectuées à réception/livraison définitive d’une installation neuve surtout si l’on désire en vérifier la qualité et les éventuelles faiblesses  (peut servir à tranquilliser le client sur la qualité de l’installation et garantir un état déterminé lors de l’installation)", infos3: " Une thermographie photovoltaïque permet de conserver une trace dans le temps de l’empreinte thermique et donc de l’efficacité de ses panneaux (peut servir à déterminer si des panneaux ne doivent pas être désactivés car leur performance est trop mauvaise par rapport aux autres)", infos4: "Nos interventions peuvent être programmées à la demande d’un poseur de panneaux afin de trouver plus vite un panneau défectueux par thermographie", infos5: "La cellule chaude, source et risque : C’est une cellule avec un vice de construction ou mal placée ou qui a pris l’eau voire fendue. Sa chaleur est due au fait que la chaleur n’est non seulement plus convertie en électricité mais en plus, il se produit une inversion de polarité qui la transforme en une sorte de condensateur.", infos6: "Le motif thermique est l’aspect global des panneaux, étant généralement tous orientés de la même manière, ils doivent réagir de manière similaire et leur échauffement se ressembler. La seule différence est qu’il existe un sens de branchement dans un string (un string de panneaux est une chaîne de panneaux reliées à l’onduleur, cette méthode évite de devoir relier chaque panneau à son propre onduleur) et son départ est plus froid que son arrivée. Donc si le motif thermique n’est pas cohérent, c’est qu’il ya des problèmes de connexions dans certains panneaux ou entre eux.", infos7: "L'assurance qualité est d'une importance fondamentale pour les panneaux photovoltaïques. Ces panneaux doivent fonctionner sans défaillance pour être efficaces dans la production d'électricité, atteindre une grande durée de vie et apporter un retour sur investissement élevé. Pour écarter les défaillances, il faut évaluer les performances des panneaux par une méthode rapide, simple et fiable, à la fois pendant la production et après l'installation.", infos8: "L'utilisation des caméras thermiques pour l'évaluation des panneaux photovoltaïques présente plusieurs avantages. Les anomalies sont clairement visibles sur l'excellente image thermique et, contrairement à la plupart des autres méthodes, l'examen des panneaux installés est possible au cours de leur fonctionnement normal. Enfin, les caméras thermiques permettent de visualiser  de grandes surfaces en peu de temps.", infos9: "Chaque projet fera l'objet d'un devis personnalisé.", infos10: "Conclusion : L'inspection thermographique des systèmes photovoltaïques permet de localiser rapidement les défauts possibles au niveau des cellules et des modules, ainsi que les éventuels problèmes de connexion. Elle est menée dans les conditions normales de fonctionnement et ne nécessite pas la mise à l'arrêt.", logo: "https://res.cloudinary.com/wagui/image/upload/v1659606854/wairdrone/Logos/logo_th_pv_yfwg7d.svg")
file1 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659366066/wairdrone/Thermographie_PV/Thermographie_photovolta%C3%AFque_nibgb8.jpg')
thermographie_pv.photos.attach(io: file1, filename: 'thermographie_pv.jpg', content_type: 'image/jpg')
file2 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614853/wairdrone/Thermographie_PV/DJI_0182_xn3ipr.jpg')
thermographie_pv.photos.attach(io: file2, filename: 'thermographie_pv2.jpg', content_type: 'image/jpg')
file3 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614693/wairdrone/Thermographie_PV/DJI_0183_R_ckqs3c.jpg')
thermographie_pv.photos.attach(io: file3, filename: 'thermographie_pv3.jpg', content_type: 'image/jpg')
file4 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659366066/wairdrone/Thermographie_PV/Thermographie_photovolta%C3%AFque_nibgb8.jpg')
thermographie_pv.photos.attach(io: file4, filename: 'thermographie_pv4.jpg', content_type: 'image/jpg')
file5 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659615195/wairdrone/Thermographie_PV/IMG_20211118_112637_nh1lqx.jpg')
thermographie_pv.photos.attach(io: file5, filename: 'thermographie_pv5.jpg', content_type: 'image/jpg')
file6 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614855/wairdrone/Thermographie_PV/DJI_0176_rhsaua.jpg')
thermographie_pv.photos.attach(io: file6, filename: 'thermographie_pv6.jpg', content_type: 'image/jpg')
file7 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614709/wairdrone/Thermographie_PV/DJI_0185_R_rdwx6m.jpg')
thermographie_pv.photos.attach(io: file7, filename: 'thermographie_pv7.jpg', content_type: 'image/jpg')
file8 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659615061/wairdrone/Thermographie_PV/WAIRDRONE_intervention_jjbbbx.jpg')
thermographie_pv.photos.attach(io: file8, filename: 'thermographie_pv8.jpg', content_type: 'image/jpg')
file9 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659615027/wairdrone/Thermographie_PV/IMG_20211118_111800_qspsox.jpg')
thermographie_pv.photos.attach(io: file9, filename: 'thermographie_pv9.jpg', content_type: 'image/jpg')
file10 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614931/wairdrone/Thermographie_PV/IMG_20211118_111747_zbbm4q.jpg')
thermographie_pv.photos.attach(io: file10, filename: 'thermographie_pv10.jpg', content_type: 'image/jpg')
file11 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614856/wairdrone/Thermographie_PV/DJI_0184_c8e0ce.jpg')
thermographie_pv.photos.attach(io: file11, filename: 'thermographie_pv11.jpg', content_type: 'image/jpg')
file12 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659615192/wairdrone/Thermographie_PV/IMG_20211118_112507_u2rnoy.jpg')
thermographie_pv.photos.attach(io: file12, filename: 'thermographie_pv12.jpg', content_type: 'image/jpg')
file13 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614848/wairdrone/Thermographie_PV/DJI_0174_zzup4q.jpg')
thermographie_pv.photos.attach(io: file13, filename: 'thermographie_pv13.jpg', content_type: 'image/jpg')
file14 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614678/wairdrone/Thermographie_PV/Capture_2_nu5tjg.jpg')
thermographie_pv.photos.attach(io: file14, filename: 'thermographie_pv14.jpg', content_type: 'image/jpg')
file15 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614845/wairdrone/Thermographie_PV/DJI_0168_v5hvrl.jpg')
thermographie_pv.photos.attach(io: file15, filename: 'thermographie_pv15.jpg', content_type: 'image/jpg')
file16 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614702/wairdrone/Thermographie_PV/DJI_0169_R_mmcoet.jpg')
thermographie_pv.photos.attach(io: file16, filename: 'thermographie_pv16.jpg', content_type: 'image/jpg')
file17 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614709/wairdrone/Thermographie_PV/DJI_0185_R_rdwx6m.jpg')
thermographie_pv.photos.attach(io: file17, filename: 'thermographie_pv17.jpg', content_type: 'image/jpg')
file18 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659620083/wairdrone/Thermographie_PV/DJI_0003_gtkys4.jpg')
thermographie_pv.photos.attach(io: file18, filename: 'thermographie_pv18.jpg', content_type: 'image/jpg')
file19 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659620057/wairdrone/Thermographie_PV/DJI_0002_R_syrbpt.jpg')
thermographie_pv.photos.attach(io: file19, filename: 'thermographie_pv19.jpg', content_type: 'image/jpg')
file20 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659620055/wairdrone/Thermographie_PV/DJI_0002_R_-_copie_cjkxos.jpg')
thermographie_pv.photos.attach(io: file20, filename: 'thermographie_pv20.jpg', content_type: 'image/jpg')
file100 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659606854/wairdrone/Logos/logo_th_pv_yfwg7d.svg')
thermographie_pv.photos.attach(io: file100, filename: 'logo_thermographie_pv.svg', content_type: 'image/svg')

puts "#{Service.count} services created"

pg = Service.create(name: 'Photogrammétrie', description: 'La solution WAIRDRONE pour la documentation de vos projets et pour le suivi de chantier !', Captation: 0.28, Traitement: 0.12, Déplacement: 0.94, infos1: "Documentez toutes les étapes de votre projet, suivez les progrès du site par rapport au calendrier projet, mesurez et contrôlez les dessins de conception et la construction afin de détecter rapidement tout écart ou erreur, obtenez une imagerie régulière de votre chantier et coordonnez les équipes du projet.", infos2: "", infos3: "INSPECTION : Inspections rapides et sécurisées. Visualisez les détails des infrastructures de différents angles à partir d'une imagerie haute définition. Obtenez une imagerie des zones difficiles d'accès par les méthodes traditionnelles. Mesure des volumes et calcul des quantités pour les opération de coupes et de remplissage. Obtenez des relevés topographiques précis.",infos4: "ORTHOPHOTOGRAPHIE 2D : Mise à l'échelle et géoréférencée, couleurs véritables, compatibles avec les principaux logiciels de Conception Assistée par Ordinateurs (CAO) pour une représentation générale se la scène. LIVRABLES : .tif, .kml, .html", infos5: "NUAGE DE POINTS 3D : Couleurs véritables issues des images, coordonnées X, Y, Z pour un positionnement précis, compatibles avec les principaux logiciels de Conception Assistée par Ordinateurs (CAO). LIVRABLES : .las, .laz, .xyz, .ply", infos6: "MAILLAGE TEXTURÉ 3D : Idéal pour la visualisation. Utile pour la communication. LIVRABLES : .obj, .ply, .dxf, .fbx, .pdf", infos7: "EXEMPLES VIDÉO UTILISATION NUAGE DE POINTS DANS LOGICIELS CAO : https://youtu.be/px7TDSO1cgo et https://youtu.be/AUSFDKncmJw", infos8: "COURBES DE NIVEAU : Utiles en phase de conception et de terrassement. Représentation simplifiée de la surface du sol. LIVRABLES : .shp, .dxf, .pdf", infos9: "CARTE D'ÉLÉVATION 2D : Représentation de la hauteur et de la profondeur. LIVRABLES : .tif, .las, .laz, .xyz", infos10: "Chaque projet fera l'objet d'un devis personnalisé.", logo: "https://res.cloudinary.com/wagui/image/upload/v1659606849/wairdrone/Logos/logo_pg_o3xxls.svg")
file1 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659366318/wairdrone/Photogramm%C3%A9trie/Capture_3_yrhkmt.jpg')
pg.photos.attach(io: file1, filename: 'pg.jpg', content_type: 'image/jpg')
file2 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659366318/wairdrone/Photogramm%C3%A9trie/Capture_3_yrhkmt.jpg')
pg.photos.attach(io: file2, filename: 'pg_2.jpg', content_type: 'image/jpg')
file3 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614228/wairdrone/Photogramm%C3%A9trie/Capture_d_%C3%A9cran_Rancy4_riidp7.png')
pg.photos.attach(io: file3, filename: 'pg_3.jpg', content_type: 'image/jpg')
file4 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659615198/wairdrone/Photogramm%C3%A9trie/Building_edited_tufjm2.jpg')
pg.photos.attach(io: file4, filename: 'pg_4.jpg', content_type: 'image/jpg')
file5 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614202/wairdrone/Photogramm%C3%A9trie/Courbes_de_niveau_c6zlv1.jpg')
pg.photos.attach(io: file5, filename: 'pg_5.jpg', content_type: 'image/jpg')
file6 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614189/wairdrone/Photogramm%C3%A9trie/Capture_d_%C3%A9cran_Rancy7_mnt1od.png')
pg.photos.attach(io: file6, filename: 'pg_6.jpg', content_type: 'image/jpg')
file7 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614221/wairdrone/Photogramm%C3%A9trie/MNS_scdaep.jpg')
pg.photos.attach(io: file7, filename: 'pg_7.jpg', content_type: 'image/jpg')
file8 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614224/wairdrone/Photogramm%C3%A9trie/Capture_d_%C3%A9cran_les_3_croix_1_hibaia.png')
pg.photos.attach(io: file8, filename: 'pg_8.jpg', content_type: 'image/jpg')
file9 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614228/wairdrone/Photogramm%C3%A9trie/Ortho_DAP_2_dazfec.jpg')
pg.photos.attach(io: file9, filename: 'pg_9.jpg', content_type: 'image/jpg')
file10 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614203/wairdrone/Photogramm%C3%A9trie/Contrainte_d_%C3%A9chelle_yceqov.jpg')
pg.photos.attach(io: file10, filename: 'pg_10.jpg', content_type: 'image/jpg')
file11 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614181/wairdrone/Photogramm%C3%A9trie/Calcul_volume_terrassement_nrkyci.jpg')
pg.photos.attach(io: file11, filename: 'pg_11.jpg', content_type: 'image/jpg')
file12 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614165/wairdrone/Photogramm%C3%A9trie/Photogramm%C3%A9trie_Ch%C3%A2teaudouble_1_skjkze.jpg')
pg.photos.attach(io: file12, filename: 'pg_12.jpg', content_type: 'image/jpg')
file13 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614228/wairdrone/Photogramm%C3%A9trie/Ortho_DAP_2_dazfec.jpg')
pg.photos.attach(io: file13, filename: 'pg_13.jpg', content_type: 'image/jpg')
file14 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614228/wairdrone/Photogramm%C3%A9trie/Inspection_e75alo.jpg')
pg.photos.attach(io: file14, filename: 'pg_14.jpg', content_type: 'image/jpg')
file15 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659366318/wairdrone/Photogramm%C3%A9trie/Capture_3_yrhkmt.jpg')
pg.photos.attach(io: file15, filename: 'pg_15.jpg', content_type: 'image/jpg')
file16 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614228/wairdrone/Photogramm%C3%A9trie/Inspection_e75alo.jpg')
pg.photos.attach(io: file16, filename: 'pg_16.jpg', content_type: 'image/jpg')
file17 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614164/wairdrone/Photogramm%C3%A9trie/Sorties_kgrm1m.jpg')
pg.photos.attach(io: file17, filename: 'pg_17.jpg', content_type: 'image/jpg')
file18 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614246/wairdrone/Photogramm%C3%A9trie/Capture_d_%C3%A9cran_Rancy6_ambjsn.png')
pg.photos.attach(io: file18, filename: 'pg_18.jpg', content_type: 'image/jpg')
file19 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659366318/wairdrone/Photogramm%C3%A9trie/Capture_3_yrhkmt.jpg')
pg.photos.attach(io: file19, filename: 'pg_19.jpg', content_type: 'image/jpg')
file20 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659614163/wairdrone/Photogramm%C3%A9trie/Photogramm%C3%A9trie_Ch%C3%A2teaudouble_6_zvomp7.jpg')
pg.photos.attach(io: file20, filename: 'pg_20.jpg', content_type: 'image/jpg')
file100 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659606849/wairdrone/Logos/logo_pg_o3xxls.svg')
pg.photos.attach(io: file100, filename: 'logo_pg.svg', content_type: 'image/svg')

puts "#{Service.count} services created"

puts 'Destroy CGV'
ConditionGeneralesVente.destroy_all
puts 'Destroy CGV done'

puts 'Create CGV'

cgv = ConditionGeneralesVente.create(name: 'Conditions Generales de Vente', intro: 'Les présentes CGV (conditions générales de vente) régissent de manière exclusive les relations commerciales entre WAIRDRONE, entreprise en nom propre GENET Guillaume, dont le siège social est situé  au 14 rue de la République - 83300 Draguignan, en France, SIRET 539 918 771 00020, assurance AXA numéro 10287869104, et une personne physique professionnelle ou non achetant pour ces besoins ("le Client") un service ("le Service"). Elles prévalent sur tous les documents contractuels ou non, même postérieurs, émis par le Client.
Toute commande passée auprès de WAIRDRONE sera soumise aux présentes CGV. Le fait de passer commande implique l’adhésion totale du Client aux présentes CGV. WAIRDRONE se réserve le droit d’adapter ou de modifier les présentes CGV à tout moment sans préavis. Ces modifications s’appliqueront à toute commande conclue postérieurement à leur mise en ligne sur le site internet de WAIRDRONE.',condition1: "1. Le Service a pour objet principal la collecte et le traitement d’images à partir d’un drone, selon les modalités décrites dans le devis accepté par le Client ('le Devis').", condition2: "Le Client accepte que l'envoi du Devis et les échanges d’informations avec WAIRDRONE puissent se faire par mail.", condition3: "Une fois le Devis accepté par le Client, il est définitif et ne peut être annulé par ce dernier. Toutefois, le Devis est toujours conclu sous la condition résolutoire (article 1304 du Code civil) de la non-délivrance des autorisations ou réglementation contraire au vol de drones. Si le service est impossible dans les termes convenus du Devis, la condition résolutoire est accomplie et le Devis devient nul, sans indemnité de part et d’autre.",condition4: "Tout autre document que le Devis et les présentes CGV n'ont qu'une valeur informative et indicative, et non-contractuelle.", condition5: "A l’issue de la collecte des données par le drone, le Client recevra son dossier ('Dossier')par mail ou sur clé USB (selon les termes cités dans le Devis).La réception de ce Dossier matérialise la fin du Service.", condition6: "Il appartient au Client de prendre toutes mesures nécessaires à la sauvegarde des données de son Dossier.", condition7: "WAIRDRONE conserve une copie de ces Dossiers pendant une durée de 3 mois après le Service.", condition8: "WAIRDRONE déclare et obtient auprès des autorités préfectorales le récépissé ou l’autorisation de vol nécessaire afin de permettre le Service. Si l’autorisation n’est pas délivrée dans le délai attendu convenu sur le Devis la relation contractuelle prendra fin immédiatement sans indemnité de part et d’autre.", condition9: "L’obtention de toute autre autorisation que celle visée au paragraphe 1 ci-dessus est à la charge du Client (y compris pour la visite préparatoire), tel que (liste non-limitative) l’autorisation du propriétaire du site ou de son représentant, l’autorisation du maître d’ouvrage ou de son représentant, les autorisations de toute personne filmée par le drone (droit à l’image) lors du Service ou de la visite préparatoire. Le Client s’engage à prévenir toutes les personnes concernées sur le site, y compris par voie d’affichage, et communiquera à WAIRDRONE une copie de ces autorisations. Pour l’autorisation d’être filmé, le Client recueille par écrit avant le vol du drone l’accord individuel de chaque personne concernée. Toutes ces autorisations doivent être obtenues par le Client avant la date programmée du vol. Si les autorisations nécessaires ne sont pas obtenues dans un délai d'un mois à compter de la demande effectuée par le Client, la relation contractuelle prendra fin immédiatement sans indemnité de part et d’autre.", condition10: "Le Client doit donner à WAIRDRONE l’accès au site les jours convenus pour la visite préparatoire et le jour du Service.", condition11: "Le calendrier de réalisation de la Prestation est indicatif. Le vol sera effectué sous réserve de la confirmation de sa faisabilité à l’issue de la Visite et de l’obtention des autorisations nécessaires. La date exacte et l’horaire pour la réalisation du vol seront confirmés par WAIRDRONE en fonction des conditions météorologiques.", condition12: "Le Dossier sera transmis au Client dans un délai maximum de six (6) mois afin que WAIRDRONE puisse procéder à une étude particulière des images prises durant le vol.", condition13: "WAIRDRONE informe le Client que la réalisation du Service peut être impossible sur le moment en raison de mauvaises conditions météorologiques pour le vol. Le Client est informé que le report du vol pourra nécessiter une nouvelle demande d’autorisation et donc un délai supplémentaire.", condition14: "Si la réalisation du Service est impossible dans un délai raisonnable, la relation contractuelle prend fin sans indemnité de part et d’autre.", condition15: "Le Client devra se conformer aux règles de sécurité communiquées par WAIRDRONE avant et pendant le vol et les faire respecter par toute personne présente sur le site. Le Client s’assure de la bonne compréhension de ces règles par toutes les personnes présentes sur le site et recueille par écrit avant le vol l’accord individuel de chaque personne concernée.", condition16: "Le prix correspondant au Service est indiqué dans le Devis.", condition17: "Le Service sera facturé à l'envoi du Dossier.", condition18: "Le règlement par le Client s’effectue par virement, au compte indiqué sur la facture, par un acompte de trente pourcent (30%) du montant de celle-ci avant la prestation, le solde de la facture devra être réglé à la livraison du Dossier. Tout règlement du Client devra rappeler le numéro de la facture. Aucun escompte pour paiement anticipé ne sera accordé.", condition19: "En cas de retard de paiement, WAIRDRONE se réserve en outre le droit de suspendre l’exécution du Service concernée ainsi que de tout autre service commandé par le Client à WAIRDRONE, ce que le Client accepte expressément.", condition20: "Le Client s’engage à vérifier le contenu du Dossier dans les cinq jours ouvrés suivant la date à laquelle il a été reçu par le Client, et signale dans ce délai à WAIRDRONE toute non-conformité éventuelle. Si pour une raison exclusivement imputable à WAIRDRONE, le Dossier n’est pas conforme aux spécifications (telles que confirmées par WAIRDRONE à la suite de la visite préparatoire), WAIRDRONE s’engage à corriger le Dossier. Toutefois, si la correction du Dossier implique de procéder à une nouvelle collecte des données sur le site et qu’il n’est pas possible de réaliser un nouveau vol dans un délai de six (6) mois (pour toute cause non-imputable à WAIRDRONE), la relation contractuelle prend fin sans indemnité de part et d’autre, le Client conservant en l’état le Dossier, mais renonçant à tous recours contre WAIRDRONE, WAIRDRONE renonçant à réclamer le paiement de la facture correspondante.", condition21: "Le Client interprète le Dossier sous son entière responsabilité et procédera à toute étude complémentaire jugée par lui utile ou nécessaire. WAIRDRONE ne pourra être tenue responsable de tout préjudice résultant de l’impossibilité (totale ou partielle) d’utilisation par le Client du Dossier, ou de l’inadéquation du Dossier aux besoins du Client.", condition22: "Le Client ne devient propriétaire du Dossier qu’après complet règlement du prix du Service, toutefois les droits d'images sont délivrés pour une durée de 3 ans. A la suite de cette période, si le client utilise toujours tout ou partie du Dossier, WAIRDRONE à la possibilité de facturer de nouveau ce droit d'image, et ce, tous les 3 ans si tout ou partie du Dossier est utilisé par le Client sans avoir à faire de Devis au préalable.", condition23: "Le Client autorise WAIRDRONE à utiliser les données ou images collectées par le drone afin d’améliorer sa base de connaissance interne.", condition24: "WAIRDRONE sera libre de réaliser et diffuser des communiqués de presse, annonces, publicités ou toute autre communication à caractère technique, commercial ou promotionnel relative au Service, et cela, dans tout type de média (internet, télévision, radio, presse écrite, salon professionnel ou grand public,...), sur tout type de support connus ou inconnus à ce jour (support imprimé ou numérique, brochures, film, vidéo, sans que cette liste soit limitative), dans toutes les langues et dans tous les pays, y compris en utilisant ou en combinant tout ou partie des données ou images collectées (sauf information préalablement désignée par le Client comme étant confidentielle).", condition25: "WAIRDRONE pourra librement faire figurer le nom du Client, ainsi que son logo sur une liste de références.", condition26: "Il est convenu que, sauf une faute dolosive, WAIRDRONE ne supportera pas les conséquences pécuniaires d’un dommage matériel causé au Client de son fait, au-delà d’un montant égal à deux 2 fois le prix payé par le Client pour le Service.", condition27: "Le Client renonce à recourir contre WAIRDRONE et ses assureurs en cas de dommages immatériels (entendu comme un dommage autre que corporel ou matériel) tels que (liste non-limitative), perte de profit, perte de production, manque à gagner, atteinte à l’image de marque causés du fait de l’exécution du Service, même dans le cas où WAIRDRONE aurait eu connaissance de l’éventualité de la survenance de tels dommages. Le Client indemnise et tient WAIRDRONE indemne de toutes réclamations de tiers pour de tels dommages.", condition28: "Le Client consent à ce que WAIRDRONE enregistre et traite des informations nominatives le concernant, notamment dans le cadre de la gestion, du financement et du recouvrement des créances du poste clients, le suivi de la relation client tel que la réalisation d'enquêtes de satisfaction, la gestion des réclamations et du service après-vente, la gestion des opérations relatives à la prospection, l'élaboration de statistiques commerciales, la gestion des avis sur les services ou contenus. Conformément aux dispositions de la loi Informatique et Liberté n° 78-17 du 6 janvier 1978 modifiée, le Client dispose d’un droit d’accès, de rectification et de suppression de ses données personnelles ainsi que d’un droit d’opposition à leur traitement, auprès de WAIRDRONE.", condition29: "WAIRDRONE ne pourra être tenue responsable envers le Client d’un manquement à ses obligations contractuelles qui serait imputable à un cas de force majeure. Constitueront des cas de force majeure les événements échappant raisonnablement au contrôle de WAIRDRONE, tels que les grèves, les troubles sociaux, émeutes, embargos, guerres, lock-out, non-disponibilité des moyens de transport et de communication, manques de fournitures de biens ou de services, restriction par ordre d’une juridiction ou d’une autorité publique, défauts d’obtention d’autorisations nécessaires ou d’approbations des organismes gouvernementaux et autorité.", condition30: "Le fait pour WAIRDRONE de ne pas appliquer à un quelconque moment une disposition des CGV, ou de ne pas en demander l’application par le Client, ne pourra en aucun cas être considéré comme constituant une renonciation à ladite disposition, ni au droit de WAIRDRONE de réclamer ultérieurement l’application de ladite disposition.", condition31: "La relation commerciale entre WAIRDRONE et le Client est régie par le droit français.", condition32: "De convention expresse, toutes les contestations concernant l’interprétation ou l’exécution du Service, même en cas de demande incidente, de pluralité de défendeurs ou d’appel en garantie, seront de la seule compétence du tribunal de commerce de Draguignan, auquel il est fait attribution de juridiction.")
file1 = URI.open('https://res.cloudinary.com/wagui/image/upload/v1659711968/wairdrone/Logos/logo-cgv_jklpce.svg')
cgv.photos.attach(io: file1, filename: 'cgv.jpg', content_type: 'image/jpg')

puts "#{ConditionGeneralesVente.count} CGV created"
